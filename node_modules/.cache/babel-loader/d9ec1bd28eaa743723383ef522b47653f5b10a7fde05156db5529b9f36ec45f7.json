{"ast":null,"code":"var _jsxFileName = \"/home/codeyourfuture/Desktop/CYF/React/My React Apps/baby-names-react/baby-names-react/src/DisplayNames.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayNames(props) {\n  _s();\n  const [items, setItems] = useState([{\n    id: 1,\n    itemName: \"item 1\",\n    quantity: 1,\n    isSelected: false\n  }, {\n    id: 2,\n    itemName: \"item 2\",\n    quantity: 3,\n    isSelected: true\n  }, {\n    id: 3,\n    itemName: \"item 3\",\n    quantity: 2,\n    isSelected: false\n  }]);\n  const [search, setSearch] = useState(\"\");\n  const [count, setCount] = useState([]);\n  function handleSearch(event) {\n    setSearch(event.target.value);\n  }\n\n  // let favorites;\n  const favoriteName = el => {\n    setCount([...count, el]);\n    setItems(items.filter(i => i.id !== el.id));\n  };\n  const filteredItems = items.filter(item => item.itemName.includes(search));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"BABY NAMES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Baby Names\",\n        value: search,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: filteredItems.sort((a, b) => a.itemName.localeCompare(b.name)).map((el, id) => {\n        if (el.sex === \"f\") {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"orange\",\n            onClick: () => favoriteName(el),\n            children: [\" \", el.itemName, \" \"]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"blue\",\n            onClick: () => favoriteName(el),\n            children: [\" \", el.itemName, \" \"]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: count.map(na => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: na.name\n        }, na.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayNames, \"95qoU79oEF0vllDdA6ANuYQN73I=\");\n_c = DisplayNames;\nexport default DisplayNames;\nvar _c;\n$RefreshReg$(_c, \"DisplayNames\");","map":{"version":3,"names":["React","useState","DisplayNames","props","items","setItems","id","itemName","quantity","isSelected","search","setSearch","count","setCount","handleSearch","event","target","value","favoriteName","el","filter","i","filteredItems","item","includes","sort","a","b","localeCompare","name","map","sex","na"],"sources":["/home/codeyourfuture/Desktop/CYF/React/My React Apps/baby-names-react/baby-names-react/src/DisplayNames.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction DisplayNames(props) {\n  const [items, setItems] = useState([\n    { id: 1, itemName: \"item 1\", quantity: 1, isSelected: false },\n    { id: 2, itemName: \"item 2\", quantity: 3, isSelected: true },\n    { id: 3, itemName: \"item 3\", quantity: 2, isSelected: false },\n  ]);\n  const [search, setSearch] = useState(\"\");\n  const [count, setCount] = useState([]);\n\n  function handleSearch(event) {\n    setSearch(event.target.value);\n  }\n\n  // let favorites;\n  const favoriteName = (el) => {\n    setCount([...count, el]);\n    setItems(items.filter((i) => i.id !== el.id));\n  };\n\n  const filteredItems = items.filter((item) => item.itemName.includes(search));\n\n  return (\n    <div>\n      <div>\n        <h1>BABY NAMES</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Baby Names\"\n          value={search}\n          onChange={handleSearch}\n        />\n      </div>\n\n      <p>\n        {filteredItems\n          .sort((a, b) => a.itemName.localeCompare(b.name))\n          .map((el, id) => {\n            if (el.sex === \"f\") {\n              return (\n                <span\n                  key={id}\n                  className=\"orange\"\n                  onClick={() => favoriteName(el)}\n                >\n                  {\" \"}\n                  {el.itemName}{\" \"}\n                </span>\n              );\n            } else {\n              return (\n                <span\n                  key={id}\n                  className=\"blue\"\n                  onClick={() => favoriteName(el)}\n                >\n                  {\" \"}\n                  {el.itemName}{\" \"}\n                </span>\n              );\n            }\n          })}\n      </p>\n      <div>\n        <ol>\n          {count.map((na) => (\n            <li key={na.id}>{na.name}</li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayNames;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}